<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>vertx-native-functions</artifactId>
  <version>${revision}</version>

  <name>Vert.x Native Functions</name>

  <properties>
    <!-- Application build properties -->
    <http.port>8888</http.port>

    <!-- Code build properties -->
    <vertx.version>4.2.7</vertx.version>
    <freelib.utils.version>3.0.1</freelib.utils.version>

    <!-- Docker build properties -->
    <alpine.version>3.15.4</alpine.version>
    <builder.version>0.0.8</builder.version>

    <!-- Whether UPX should be used to compress the application -->
    <use.upx>true</use.upx>

    <!-- The AWS Lambda's main verticle -->
    <vertx.verticle>info.freelibrary.vertx.functions.HttpVerticle</vertx.verticle>

    <!-- Plugin versions -->
    <vertx.plugin.version>1.0.27</vertx.plugin.version>
    <deploy.plugin.version>2.8.2</deploy.plugin.version>
    <docker.plugin.version>0.39.1</docker.plugin.version>
    <graalvm.plugin.version>0.9.11</graalvm.plugin.version>

    <!-- Maven build properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skipBuild>true</skipBuild>

    <!-- The Docker registry user and password used for publishing images -->
    <docker.registry.username />
    <docker.registry.password />

    <!-- The Docker registry account, if supplied, must end with a slash (e.g. "account/") -->
    <docker.registry.account />
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-config</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>info.freelibrary</groupId>
      <artifactId>freelib-utils</artifactId>
      <version>${freelib.utils.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Generate our MessageCodes class from the messages resource file -->
      <plugin>
        <groupId>info.freelibrary</groupId>
        <artifactId>freelib-maven-plugins</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>generate-codes</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <skipMain>${skipBuild}</skipMain>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.reactiverse</groupId>
        <artifactId>vertx-maven-plugin</artifactId>
        <version>${vertx.plugin.version}</version>
        <executions>
          <execution>
            <id>vertx</id>
            <goals>
              <goal>initialize</goal>
              <goal>package</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <redeploy>true</redeploy>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <skipTests>${skipBuild}</skipTests>
          <argLine>${jacoco.agent.arg}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <!-- Resource bundle for freelib-utils dependency -->
                <artifactItem>
                  <groupId>info.freelibrary</groupId>
                  <artifactId>freelib-utils</artifactId>
                  <version>${freelib.utils.version}</version>
                  <outputDirectory>${project.build.directory}/classes</outputDirectory>
                  <includes>**\/freelib-util_messages.xml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>${graalvm.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <configuration>
          <imageName>bootstrap</imageName>
          <mainClass>${vertx.verticle}</mainClass>
          <skip>${skipBuild}</skip>
          <buildArgs>
            <buildArg>--static</buildArg>
            <buildArg>--libc=musl</buildArg>
            <buildArg>-H:+ReportExceptionStackTraces</buildArg>
            <buildArg>-H:+PrintClassInitialization</buildArg>
          </buildArgs>
        </configuration>
      </plugin>

      <!-- Disable standard deploy; we publish a Docker image, not Jar file -->
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${deploy.plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- A Maven plugin that can build a Docker image with our application -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.plugin.version}</version>
        <configuration>
          <verbose>true</verbose>
          <images>
            <image>
              <!-- Registry account, if supplied, must end in a slash (e.g. "account/") -->
              <name>${docker.registry.account}${project.artifactId}:%l</name>
              <build>
                <args>
                  <ALPINE_TAG>${alpine.version}</ALPINE_TAG>
                  <BUILDER_TAG>${builder.version}</BUILDER_TAG>
                  <PROJECT_NAME>${project.artifactId}</PROJECT_NAME>
                  <USE_UPX>${use.upx}</USE_UPX>
                </args>
                <dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
                <assembly>
                  <descriptorRef>project</descriptorRef>
                </assembly>
              </build>
            </image>
          </images>
          <authConfig>
            <username>${docker.registry.username}</username>
            <password>${docker.registry.password}</password>
          </authConfig>
        </configuration>
        <executions>
          <execution>
            <id>docker-build</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <parent>
    <artifactId>freelib-parent</artifactId>
    <groupId>info.freelibrary</groupId>
    <version>7.2.2</version>
  </parent>

</project>